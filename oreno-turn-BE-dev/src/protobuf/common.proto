syntax = "proto3";

package common;

/*
    게임 데이터 명세
*/
message RoomData {
    int32 id = 1;
    int64 ownerId = 2;
    string name = 3;
    int32 maxUserNum = 4;
    RoomStateType state = 5; // WAIT 0, PREPARE 1, INAGAME 2
    repeated UserData users = 6; // 인덱스 기반으로 턴 진행
}

// 입장했을때는 랜덤으로 체력만큼 카드 받음.
// 하루 종료 시 체력만큼의 카드만 남길 수 있음.
// 이후 낮이 될때마다 카드 두장 받고 시작
message UserData {
    int64 id = 1;
    string nickname = 2;
    CharacterData character = 3;
}

message CharacterData {
    CharacterType characterType = 1;
    RoleType roleType = 2;
    int32 hp = 3;
    int32 mp = 4;
    int32 coin = 5;
    int32 weapon = 6;
    CharacterStateInfoData stateInfo = 7;
    repeated int32 equips = 8;
    repeated int32 debuffs = 9;
    repeated CardData handCards = 10;
    repeated BuffData buffs = 11;
    int32 bbangCount = 12;
    int32 handCardsCount = 13;
}

message CharacterPositionData {
    int64 id = 1;
    double x = 2;
    double y = 3;
}

message CardData {
    CardType type = 1;
    int32 count = 2;
    int32 cost = 3; // 마나 코스트
    int32 coin = 4; // 구매 비용
}

message GameStateData {
    PhaseType phaseType = 1; // DAY 1, EVENING 2, END 3 (하루 종료시 카드 버리는 턴)
    int64 nextPhaseAt = 2; // 다음 페이즈 시작 시점(밀리초 타임스탬프)
}

message CharacterStateInfoData {
    CharacterStateType state = 1;
    CharacterStateType nextState = 2;
    int64 nextStateAt = 3; // state가 nextState로 풀리는 밀리초 타임스탬프. state가 NONE이면 0
    int64 stateTargetUserId = 4; // state에 target이 있을 경우
}

// 여기부터 추가

message BuffData {
    BuffType type = 1;
    int32 count = 2;
}