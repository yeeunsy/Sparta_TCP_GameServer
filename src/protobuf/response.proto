syntax = "proto3";

package response;

/*
    response 패킷 명세
*/

message S2CRegisterResponse {
    bool success = 1;
    string message = 2;
    GlobalFailCode failCode = 3;
}

message S2CLoginResponse {
    bool success = 1;
    string message = 2;
    string token = 3;
    UserData myInfo = 4;
    GlobalFailCode failCode = 5;
}

message S2CCreateRoomResponse {
    bool success = 1;
    RoomData room = 2;
    GlobalFailCode failCode = 3;
}

message S2CGetRoomListResponse{
    repeated RoomData rooms = 1;
}

message S2CJoinRoomResponse {
    bool success = 1;
    RoomData room = 2;
    GlobalFailCode failCode = 3;
}

message S2CJoinRandomRoomResponse {
    bool success = 1;
    RoomData room = 2;
    GlobalFailCode failCode = 3;
}

message S2CJoinRoomNotification {
    UserData joinUser = 1;
}

message S2CLeaveRoomResponse {
    bool success = 1;
    GlobalFailCode failCode = 2;
}

message S2CLeaveRoomNotification {
    int64 userId = 1;
}

message S2CGamePrepareResponse {
    bool success = 1;
    GlobalFailCode failCode = 2;
}

message S2CGamePrepareNotification {
    RoomData room = 1;
}

message S2CGameStartResponse {
    bool success = 1;
    GlobalFailCode failCode = 2;
}

message S2CGameStartNotification {
    GameStateData gameState = 1;
    repeated UserData users = 2;
    repeated CharacterPositionData characterPositions = 3;
}

message S2CPositionUpdateResponse {
    bool success = 1;
    GlobalFailCode failCode = 2;
}

message S2CPositionUpdateNotification {
    repeated CharacterPositionData characterPositions = 1;
}

message S2CUseCardResponse { // 성공 여부만 반환하고 대상 유저 효과는 S2CUserUpdateNotification로 통지
    bool success = 1;
    GlobalFailCode failCode = 2;
}

message S2CUseCardNotification {
    CardType cardType = 1;
    int64 userId = 2;
    int64 targetUserId = 3; // 타겟 없으면 0
}

message S2CEquipCardNotification {
    CardType cardType = 1;
    int64 userId = 2;
}

message S2CCardEffectNotification {
    CardType cardType = 1;
    int64 userId = 2;
    bool success = 3;
}

message S2CFleaMarketNotification {
    repeated CardType cardTypes = 1;
    repeated int32 pickIndex = 2;
}

message S2CFleaMarketPickResponse {
    bool success = 1;
    GlobalFailCode failCode = 2;
}

message S2CUserUpdateNotification {
    repeated UserData user = 1;
}

message S2CPhaseUpdateNotification {
    PhaseType phaseType = 1; // DAY 1, END 3 (EVENING은 필요시 추가)
    int64 nextPhaseAt = 2; // 다음 페이즈 시작 시점(밀리초 타임스탬프)
    repeated CharacterPositionData characterPositions = 3; // 변경된 캐릭터 위치
}

message S2CReactionResponse {
    bool success = 1;
    GlobalFailCode failCode = 2;
}

message S2CDestroyCardResponse {
    repeated CardData handCards = 1;
}

message S2CGameEndNotification {
    repeated int64 winners = 1;
    WinType winType = 2;
}

message S2CCardSelectResponse {
    bool success = 1;
    GlobalFailCode failCode = 2;
}

message S2CPassDebuffResponse {
    bool success = 1;
    GlobalFailCode failCode = 2;
}

message S2CWarningNotification {
    WarningType warningType = 1;
    int64 expectedAt = 2; // 밀리초 타임스탬프
}

message S2CAnimationNotification {
    int64 userId = 1;
    AnimationType animationType = 2;
}

// 여기부터 추가

message S2CEveningDistributionNotification {
    repeated CardType cardType = 1;
}

message S2CEveningPickResponse  {
    bool success = 1;
    GlobalFailCode failCode = 2;
}

message S2CMarketCardDeleteResponse {
    bool success = 1;
    GlobalFailCode failCode = 2;
}

message S2CRerollResponse {
    bool success = 1;
    GlobalFailCode failCode = 2;
}